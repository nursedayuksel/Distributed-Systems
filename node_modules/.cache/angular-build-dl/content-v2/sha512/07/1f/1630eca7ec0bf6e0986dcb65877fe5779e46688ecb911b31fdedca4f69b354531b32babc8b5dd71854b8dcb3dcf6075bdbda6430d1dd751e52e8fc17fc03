{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/member.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/member-get/member-get.component.html","webpack:///src/app/member-get/member-get.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/member-add/member-add.component.ts","webpack:///src/app/member-add/member-add.component.html","webpack:///src/app/member-edit/member-edit.component.ts","webpack:///src/app/member-edit/member-edit.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","MemberService","http","uri","MemberName","MemberBio","MemberAge","obj","console","log","post","subscribe","res","get","id","AppComponent","loadingBar","router","title","events","event","navigationInterceptor","start","complete","stop","MemberGetComponent","ms","index","deleteMember","members","splice","getMembers","data","AppModule","MemberAddComponent","fb","createForm","angForm","group","required","addMember","navigate","MemberEditComponent","route","member","params","updateMember","editMember","routes","path","component","AppRoutingModule","forRoot","relativeLinkResolution","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MemberService {\n\n  uri = 'http://localhost:4000/members';\n\n  constructor(private http: HttpClient) { }\n\n  addMember(MemberName, MemberBio, MemberAge) {\n    const obj = {\n      MemberName,\n      MemberBio,\n      MemberAge\n    };\n    console.log(obj);\n    this.http.post(`${this.uri}/add`, obj)\n      .subscribe(res => console.log('Done'));\n  }\n\n  getMembers() {\n    return this\n      .http\n      .get(`${this.uri}`);\n  }\n\n  editMember(id) {\n    return this\n      .http\n      .get(`${this.uri}/edit/${id}`);\n  }\n\n  updateMember(MemberName, MemberBio, MemberAge, id) {\n    const obj = {\n      MemberName,\n      MemberBio,\n      MemberAge\n    };\n    this\n      .http\n      .post(`${this.uri}/update/${id}`, obj)\n      .subscribe(res => console.log('Done'));\n  }\n\n  deleteMember(id) {\n    return this\n      .http\n      .get(`${this.uri}/delete/${id}`);\n  }\n}\n","import { Component } from '@angular/core';\nimport { SlimLoadingBarService } from 'ng2-slim-loading-bar';\nimport {\n  NavigationCancel,\n  Event,\n  NavigationEnd,\n  NavigationError,\n  NavigationStart,\n  Router\n} from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular9tutorial';\n  constructor(private loadingBar: SlimLoadingBarService, private router: Router) {\n    this.router.events.subscribe((event: Event) => {\n      this.navigationInterceptor(event);\n    });\n  }\n  private navigationInterceptor(event: Event): void {\n    if (event instanceof NavigationStart) {\n      this.loadingBar.start();\n    }\n    if (event instanceof NavigationEnd) {\n      this.loadingBar.complete();\n    }\n    if (event instanceof NavigationCancel) {\n      this.loadingBar.stop();\n    }\n    if (event instanceof NavigationError) {\n      this.loadingBar.stop();\n    }\n  }\n}\n","<ng2-slim-loading-bar color=\"red\"></ng2-slim-loading-bar>\n<nav class=\"navbar navbar-expand-sm bg-light\">\n  <div class=\"container-fluid\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a routerLink=\"member/create\" class=\"nav-link\" routerLinkActive=\"active\">\n          Create Member\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a routerLink=\"members\" class=\"nav-link\" routerLinkActive=\"active\">\n          Members\n        </a>\n      </li> \n    </ul>\n  </div>\n</nav>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>","<table class=\"table table-hover\">\n  <thead>\n  <tr>\n      <td>Member Index</td>\n      <td>Member ID</td>\n      <td>Member Name</td>\n      <td>Member Bio</td>\n      <td>Member Age</td>\n      <td colspan=\"2\">Actions</td>\n  </tr>\n  </thead>\n\n  <tbody>\n      <tr *ngFor=\"let member of members; let i = index\">\n          <td>{{ member.MemberName }}</td>\n          <td>{{ member.MemberBio }}</td>\n          <td>{{ member.MemberAge }}</td>\n          <td><a [routerLink]=\"['/edit', member._id]\" class=\"btn btn-primary\">Edit</a></td>\n         <td><a (click) = \"deleteMember(member._id, i)\" class=\"btn btn-danger\">Delete</a>\n      </tr>\n  </tbody>\n</table>","import { Component, OnInit } from '@angular/core';\nimport Member from '../Member';\nimport { MemberService } from '../member.service';\n\n@Component({\n  selector: 'app-member-get',\n  templateUrl: './member-get.component.html',\n  styleUrls: ['./member-get.component.css']\n})\nexport class MemberGetComponent implements OnInit {\n\n  members: Member[];\n  constructor(private ms: MemberService) { }\n\n  deleteMember(id, index) {\n    this.ms.deleteMember(id).subscribe(res => {\n      this.members.splice(index, 1);\n    });\n}\n\n  ngOnInit() {\n    this.ms\n      .getMembers()\n      .subscribe((data: Member[]) => {\n        this.members = data;\n      });\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MemberService } from './member.service';\n\n\nimport { AppComponent } from './app.component';\nimport { MemberAddComponent } from './member-add/member-add.component';\nimport { MemberGetComponent } from './member-get/member-get.component';\nimport { MemberEditComponent } from './member-edit/member-edit.component';\n\nimport { SlimLoadingBarModule } from 'ng2-slim-loading-bar';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MemberAddComponent,\n    MemberGetComponent,\n    MemberEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    SlimLoadingBarModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [MemberService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MemberService } from '../member.service';\n\n@Component({\n  selector: 'app-member-add',\n  templateUrl: './member-add.component.html',\n  styleUrls: ['./member-add.component.css']\n})\nexport class MemberAddComponent implements OnInit {\n  angForm: FormGroup;\n  constructor(private fb: FormBuilder, private ms: MemberService, private router: Router, ) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      MemberName: ['', Validators.required],\n      MemberBio: ['', Validators.required],\n      MemberAge: ['', Validators.required]\n    });\n  }\n\n  addMember(MemberName, MemberBio, MemberAge) {\n    this.ms.addMember(MemberName, MemberBio, MemberAge);\n    this.router.navigate(['members']);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- member-add.component.html -->\n\n<div class=\"card\">\n  <div class=\"card-body\">\n    <form [formGroup]=\"angForm\" novalidate>\n      <div class=\"form-group\">\n        <label class=\"col-md-4\">Member Name</label>\n        <input type=\"text\" class=\"form-control\" \n        formControlName=\"MemberName\" \n          #MemberName/>\n      </div>\n      <div *ngIf=\"angForm.controls['MemberName'].invalid && (angForm.controls['MemberName'].dirty || angForm.controls['MemberName'].touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"angForm.controls['MemberName'].errors.required\">\n          Member Name is required.\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label class=\"col-md-4\">Member Bio </label>\n        <textarea class=\"form-control\" rows = 7 cols = \"5\"\n        formControlName=\"MemberBio\" \n        #MemberBio></textarea>\n      </div>\n      <div *ngIf=\"angForm.controls['MemberBio'].invalid && (angForm.controls['MemberBio'].dirty || angForm.controls['MemberBio'].touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"angForm.controls['MemberBio'].errors.required\">\n          Member Bio is required.\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label class=\"col-md-4\">Member Age</label>\n        <input type=\"text\" class=\"form-control\" \n        formControlName=\"MemberAge\" \n        #MemberAge/>\n      </div>\n      <div *ngIf=\"angForm.controls['MemberAge'].invalid && (angForm.controls['MemberAge'].dirty || angForm.controls['MemberAge'].touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"angForm.controls['MemberAge'].errors.required\">\n          Member Age is required.\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <button type=\"submit\" class=\"btn btn-primary\"\n        [disabled]=\"angForm.pristine || angForm.invalid\"\n        (click) = \"addMember(MemberName.value, MemberBio.value, MemberAge.value)\">Create Member</button>\n      </div>\n    </form>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MemberService } from '../member.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  angForm: FormGroup;\n  member: any = {};\n\n  constructor(private route: ActivatedRoute, private router: Router, private ms: MemberService, private fb: FormBuilder) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      MemberName: ['', Validators.required],\n      MemberBio: ['', Validators.required],\n      MemberAge: ['', Validators.required]\n    });\n  }\n\n  updateMember(MemberName, MemberBio, MemberAge) {\n    this.route.params.subscribe(params => {\n      this.ms.updateMember(MemberName, MemberBio, MemberAge, params.id);\n      this.router.navigate(['members']);\n    });\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.ms.editMember(params[`id`]).subscribe(res => {\n        this.member = res;\n      });\n    });\n  }\n}\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <form [formGroup]=\"angForm\" novalidate>\n      <div class=\"form-group\">\n        <label class=\"col-md-4\">Member Name</label>\n        <input type=\"text\" class=\"form-control\" \n        formControlName=\"MemberName\" \n          #MemberName\n          [(ngModel)] = \"member.MemberName\"/>\n      </div>\n      <div *ngIf=\"angForm.controls['MemberName'].invalid && (angForm.controls['MemberName'].dirty || angForm.controls['MemberName'].touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"angForm.controls['MemberName'].errors.required\">\n          Member Name is required.\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label class=\"col-md-4\">Member Bio </label>\n        <textarea class=\"form-control\" rows = 7 cols = \"5\"\n        formControlName=\"MemberBio\" \n        #MemberBio\n        [(ngModel)] = \"member.MemberBio\"></textarea>\n      </div>\n      <div *ngIf=\"angForm.controls['MemberBio'].invalid && (angForm.controls['MemberBio'].dirty || angForm.controls['MemberBio'].touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"angForm.controls['MemberBio'].errors.required\">\n          Member Bio is required.\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label class=\"col-md-4\">Member Age</label>\n        <input type=\"text\" class=\"form-control\" \n        formControlName=\"MemberAge\" \n        #MemberAge\n        [(ngModel)] = \"member.MemberAge\"/>\n      </div>\n      <div *ngIf=\"angForm.controls['MemberAge'].invalid && (angForm.controls['MemberAge'].dirty || angForm.controls['MemberAge'].touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"angForm.controls['MemberAge'].errors.required\">\n          Member Age is required.\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <button type=\"submit\" class=\"btn btn-primary\"\n        [disabled]=\"angForm.pristine || angForm.invalid\"\n        (click) = \"updateMember(MemberName.value, MemberBio.value, MemberAge.value)\">Update Member</button>\n      </div>\n    </form>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MemberAddComponent } from './member-add/member-add.component';\nimport { MemberEditComponent } from './member-edit/member-edit.component';\nimport { MemberGetComponent } from './member-get/member-get.component';\n\nconst routes: Routes = [\n  {\n    path: 'member/create',\n    component: MemberAddComponent\n  },\n  {\n    path: 'edit/:id',\n    component: MemberEditComponent\n  },\n  {\n    path: 'members',\n    component: MemberGetComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}