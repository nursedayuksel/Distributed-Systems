{"version":3,"sources":["./src/environments/environment.ts","./src/app/member.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/member-get/member-get.component.html","./src/app/member-get/member-get.component.ts","./src/app/app.module.ts","./src/app/member-add/member-add.component.ts","./src/app/member-add/member-add.component.html","./src/app/member-edit/member-edit.component.ts","./src/app/member-edit/member-edit.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MemberService {\n\n  uri = 'http://localhost:4000/members';\n\n  constructor(private http: HttpClient) { }\n\n  addMember(MemberName, MemberBio, MemberAge) {\n    const obj = {\n      MemberName,\n      MemberBio,\n      MemberAge\n    };\n    console.log(obj);\n    this.http.post(`${this.uri}/add`, obj)\n      .subscribe(res => console.log('Done'));\n  }\n\n  getMembers() {\n    return this\n      .http\n      .get(`${this.uri}`);\n  }\n\n  editMember(id) {\n    return this\n      .http\n      .get(`${this.uri}/edit/${id}`);\n  }\n\n  updateMember(MemberName, MemberBio, MemberAge, id) {\n    const obj = {\n      MemberName,\n      MemberBio,\n      MemberAge\n    };\n    this\n      .http\n      .post(`${this.uri}/update/${id}`, obj)\n      .subscribe(res => console.log('Done'));\n  }\n\n  deleteMember(id) {\n    return this\n      .http\n      .get(`${this.uri}/delete/${id}`);\n  }\n}\n","import { Component } from '@angular/core';\nimport { SlimLoadingBarService } from 'ng2-slim-loading-bar';\nimport {\n  NavigationCancel,\n  Event,\n  NavigationEnd,\n  NavigationError,\n  NavigationStart,\n  Router\n} from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular9tutorial';\n  constructor(private loadingBar: SlimLoadingBarService, private router: Router) {\n    this.router.events.subscribe((event: Event) => {\n      this.navigationInterceptor(event);\n    });\n  }\n  private navigationInterceptor(event: Event): void {\n    if (event instanceof NavigationStart) {\n      this.loadingBar.start();\n    }\n    if (event instanceof NavigationEnd) {\n      this.loadingBar.complete();\n    }\n    if (event instanceof NavigationCancel) {\n      this.loadingBar.stop();\n    }\n    if (event instanceof NavigationError) {\n      this.loadingBar.stop();\n    }\n  }\n}\n","<ng2-slim-loading-bar color=\"red\"></ng2-slim-loading-bar>\n<nav class=\"navbar navbar-expand-sm bg-light\">\n  <div class=\"container-fluid\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a routerLink=\"member/create\" class=\"nav-link\" routerLinkActive=\"active\">\n          Create Member\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a routerLink=\"members\" class=\"nav-link\" routerLinkActive=\"active\">\n          Members\n        </a>\n      </li> \n    </ul>\n  </div>\n</nav>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>","<table class=\"table table-hover\">\n  <thead>\n  <tr>\n      <td>Member Index</td>\n      <td>Member ID</td>\n      <td>Member Name</td>\n      <td>Member Bio</td>\n      <td>Member Age</td>\n      <td colspan=\"2\">Actions</td>\n  </tr>\n  </thead>\n\n  <tbody>\n      <tr *ngFor=\"let member of members; let i = index\">\n          <td>{{ member.MemberName }}</td>\n          <td>{{ member.MemberBio }}</td>\n          <td>{{ member.MemberAge }}</td>\n          <td><a [routerLink]=\"['/edit', member._id]\" class=\"btn btn-primary\">Edit</a></td>\n         <td><a (click) = \"deleteMember(member._id, i)\" class=\"btn btn-danger\">Delete</a>\n      </tr>\n  </tbody>\n</table>","import { Component, OnInit } from '@angular/core';\nimport Member from '../Member';\nimport { MemberService } from '../member.service';\n\n@Component({\n  selector: 'app-member-get',\n  templateUrl: './member-get.component.html',\n  styleUrls: ['./member-get.component.css']\n})\nexport class MemberGetComponent implements OnInit {\n\n  members: Member[];\n  constructor(private ms: MemberService) { }\n\n  deleteMember(id, index) {\n    this.ms.deleteMember(id).subscribe(res => {\n      this.members.splice(index, 1);\n    });\n}\n\n  ngOnInit() {\n    this.ms\n      .getMembers()\n      .subscribe((data: Member[]) => {\n        this.members = data;\n      });\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MemberService } from './member.service';\n\n\nimport { AppComponent } from './app.component';\nimport { MemberAddComponent } from './member-add/member-add.component';\nimport { MemberGetComponent } from './member-get/member-get.component';\nimport { MemberEditComponent } from './member-edit/member-edit.component';\n\nimport { SlimLoadingBarModule } from 'ng2-slim-loading-bar';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MemberAddComponent,\n    MemberGetComponent,\n    MemberEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    SlimLoadingBarModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [MemberService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MemberService } from '../member.service';\n\n@Component({\n  selector: 'app-member-add',\n  templateUrl: './member-add.component.html',\n  styleUrls: ['./member-add.component.css']\n})\nexport class MemberAddComponent implements OnInit {\n  angForm: FormGroup;\n  constructor(private fb: FormBuilder, private ms: MemberService, private router: Router, ) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      MemberName: ['', Validators.required],\n      MemberBio: ['', Validators.required],\n      MemberAge: ['', Validators.required]\n    });\n  }\n\n  addMember(MemberName, MemberBio, MemberAge) {\n    this.ms.addMember(MemberName, MemberBio, MemberAge);\n    this.router.navigate(['members']);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- member-add.component.html -->\n\n<div class=\"card\">\n  <div class=\"card-body\">\n    <form [formGroup]=\"angForm\" novalidate>\n      <div class=\"form-group\">\n        <label class=\"col-md-4\">Member Name</label>\n        <input type=\"text\" class=\"form-control\" \n        formControlName=\"MemberName\" \n          #MemberName/>\n      </div>\n      <div *ngIf=\"angForm.controls['MemberName'].invalid && (angForm.controls['MemberName'].dirty || angForm.controls['MemberName'].touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"angForm.controls['MemberName'].errors.required\">\n          Member Name is required.\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label class=\"col-md-4\">Member Bio </label>\n        <textarea class=\"form-control\" rows = 7 cols = \"5\"\n        formControlName=\"MemberBio\" \n        #MemberBio></textarea>\n      </div>\n      <div *ngIf=\"angForm.controls['MemberBio'].invalid && (angForm.controls['MemberBio'].dirty || angForm.controls['MemberBio'].touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"angForm.controls['MemberBio'].errors.required\">\n          Member Bio is required.\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label class=\"col-md-4\">Member Age</label>\n        <input type=\"text\" class=\"form-control\" \n        formControlName=\"MemberAge\" \n        #MemberAge/>\n      </div>\n      <div *ngIf=\"angForm.controls['MemberAge'].invalid && (angForm.controls['MemberAge'].dirty || angForm.controls['MemberAge'].touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"angForm.controls['MemberAge'].errors.required\">\n          Member Age is required.\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <button type=\"submit\" class=\"btn btn-primary\"\n        [disabled]=\"angForm.pristine || angForm.invalid\"\n        (click) = \"addMember(MemberName.value, MemberBio.value, MemberAge.value)\">Create Member</button>\n      </div>\n    </form>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MemberService } from '../member.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  angForm: FormGroup;\n  member: any = {};\n\n  constructor(private route: ActivatedRoute, private router: Router, private ms: MemberService, private fb: FormBuilder) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      MemberName: ['', Validators.required],\n      MemberBio: ['', Validators.required],\n      MemberAge: ['', Validators.required]\n    });\n  }\n\n  updateMember(MemberName, MemberBio, MemberAge) {\n    this.route.params.subscribe(params => {\n      this.ms.updateMember(MemberName, MemberBio, MemberAge, params.id);\n      this.router.navigate(['members']);\n    });\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.ms.editMember(params[`id`]).subscribe(res => {\n        this.member = res;\n      });\n    });\n  }\n}\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <form [formGroup]=\"angForm\" novalidate>\n      <div class=\"form-group\">\n        <label class=\"col-md-4\">Member Name</label>\n        <input type=\"text\" class=\"form-control\" \n        formControlName=\"MemberName\" \n          #MemberName\n          [(ngModel)] = \"member.MemberName\"/>\n      </div>\n      <div *ngIf=\"angForm.controls['MemberName'].invalid && (angForm.controls['MemberName'].dirty || angForm.controls['MemberName'].touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"angForm.controls['MemberName'].errors.required\">\n          Member Name is required.\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label class=\"col-md-4\">Member Bio </label>\n        <textarea class=\"form-control\" rows = 7 cols = \"5\"\n        formControlName=\"MemberBio\" \n        #MemberBio\n        [(ngModel)] = \"member.MemberBio\"></textarea>\n      </div>\n      <div *ngIf=\"angForm.controls['MemberBio'].invalid && (angForm.controls['MemberBio'].dirty || angForm.controls['MemberBio'].touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"angForm.controls['MemberBio'].errors.required\">\n          Member Bio is required.\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label class=\"col-md-4\">Member Age</label>\n        <input type=\"text\" class=\"form-control\" \n        formControlName=\"MemberAge\" \n        #MemberAge\n        [(ngModel)] = \"member.MemberAge\"/>\n      </div>\n      <div *ngIf=\"angForm.controls['MemberAge'].invalid && (angForm.controls['MemberAge'].dirty || angForm.controls['MemberAge'].touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"angForm.controls['MemberAge'].errors.required\">\n          Member Age is required.\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <button type=\"submit\" class=\"btn btn-primary\"\n        [disabled]=\"angForm.pristine || angForm.invalid\"\n        (click) = \"updateMember(MemberName.value, MemberBio.value, MemberAge.value)\">Update Member</button>\n      </div>\n    </form>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MemberAddComponent } from './member-add/member-add.component';\nimport { MemberEditComponent } from './member-edit/member-edit.component';\nimport { MemberGetComponent } from './member-get/member-get.component';\n\nconst routes: Routes = [\n  {\n    path: 'member/create',\n    component: MemberAddComponent\n  },\n  {\n    path: 'edit/:id',\n    component: MemberEditComponent\n  },\n  {\n    path: 'members',\n    component: MemberGetComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}